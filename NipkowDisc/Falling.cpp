#include "Falling.h"
#include "arduino.h"




#define one "0000000000000000000000111110000000011111111000000011111111100000011101111110000000000111111000000000011111100000000001111110000000000111111000000000011111100000000001111110000000000111111000000000011111100000011111111111100001111111111110000000000000000000"

#define two "0000000000000000000001111111000000001111111111000001000000001100001000000000110000000000001100000000000001100000000000001100000000000001100000000000001100000000000001100000000000001100000000000001100000000000000111111111100000011111111110000000000000000000"


#define eight "0000000000000000000011111111000000111111111111000011000000001100001100000000110000110000000011000011000000001100001100000000110000011111111100000011000000001100001100000000110000110000000011000011000000001100001100000000110000001111111110000000000000000000"


#define three "0000000000000000000011111111000000011111111110000011000000001100000000000000110000000000000011000000000000001000000011111111000000000000000010000000000000001100000000000000110000000000000011000010000000001100000111111111110000001111111110000000000000000000"

/*#define template "0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000*/

int digit = 0;

const char *const year[] = {one, two, eight, three};


Falling::Falling() {
    disp = Display();
    this->t = 0;
    bottle = disp.drawRect(disp.width/2, 1, 3, 2);
    this->lastPressed = 0;
    score = disp.drawRect(15, 0, 1, 0);
    state = 0;
    
    
}



void Falling::drawDrop() {
    rect* newDrop = disp.drawRect((float)(rand() % 16), 15.0, 1, 1);

    if(newDrop != nullptr) newDrop->vy = -.3;
    
}

void Falling::update() {
  
    //delete drop if it hits the ground
    for(int i = 2; i < 10; i ++) {
      if(disp.sprites[i] != nullptr) {
        if (disp.sprites[i]->y < 0) {
          disp.sprites[i] = nullptr;
          if (this->score->h > 0) this->score->h =0;
          }
        else if (disp.sprites[i]->y <= bottle->h) {
          if (disp.sprites[i]->x >= bottle->x && disp.sprites[i]->x <= bottle->x + bottle->w){
            this->score->h ++;
            if (this->score->h > 14) state = 3;
            disp.sprites[i] = nullptr;
          }
        }
      }
    }
        
    
    
    if (this->t%75 == 0) {
      this->drawDrop();
      this->t = 0;
      if (state == 3) {
        digit ++;
        digit %= 4;
    }
    }

    if (state == 3) this->won(digit);
    
    this->t++;

    this->bottle->x = analogRead(A0)/675.18*13;
    if (state ==0) disp.draw();
}

void Falling::won(int d) {
  for(int i = 0; i < 256; i ++)
    disp.Pixel[(255-i)/16][(255-i)%16] = year[d][i] - 48;
     
          
}
